---
// src/layouts/MainLayout.astro
import Header from "../components/Header.astro";
import SidebarMenu from "../components/SidebarMenu.astro";
import CodePanel from "../components/CodePanel.astro";
import "../styles/global.css";

const { title } = Astro.props;
---

<!-- Estilos para prevenir FOUC -->
<style is:inline>
  /* Prevenir el parpadeo del tema */
  html {
    color-scheme: light;
  }

  html.dark {
    color-scheme: dark;
  }

  /* Transición suave para el cambio de tema */
  * {
    transition:
      background-color 0.3s ease,
      color 0.3s ease,
      border-color 0.3s ease;
  }
</style>

<html lang="es" class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <!-- Script para aplicar el tema ANTES de renderizar -->
    <script is:inline>
      // Aplicar el tema guardado inmediatamente para prevenir FOUC
      (function () {
        const theme = localStorage.getItem("theme") || "light";
        if (theme === "dark") {
          document.documentElement.classList.add("dark");
        }
      })();
    </script>
  </head>
  <body
    class="h-full bg-gray-50 dark:bg-gradient-to-br dark:from-slate-900 dark:via-slate-800 dark:to-clarisa-950 text-slate-900 dark:text-slate-100 transition-colors"
  >
    <!-- Header fijo -->
    <header
      class="bg-gradient-to-r from-clarisa-800 to-clarisa-700 dark:from-slate-900/95 dark:via-clarisa-950/90 dark:to-clarisa-900/95 text-white shadow-lg sticky top-0 z-50 border-b border-clarisa-600/30 dark:border-clarisa-500/20 backdrop-blur-sm"
    >
      <div class="h-16 flex items-center">
        <Header />
      </div>
    </header>

    <!-- Contenedor principal con diseño de 3 columnas -->
    <div class="flex h-[calc(100vh-64px)] w-full">
      <!-- Columna Izquierda: Menú de navegación -->
      <aside
        class="w-80 bg-white/95 dark:bg-slate-900/80 border-r border-gray-200/60 dark:border-slate-700/50 overflow-hidden flex flex-col flex-shrink-0 backdrop-blur-sm"
      >
        <div class="overflow-y-auto flex-1">
          <SidebarMenu />
        </div>
      </aside>

      <!-- Columna Central: Contenido principal -->
      <main class="flex-1 bg-white/90 dark:bg-slate-800/60 overflow-y-auto min-w-0 backdrop-blur-sm">
        <div class="p-8 max-w-none w-full">
          <slot />
        </div>
      </main>

      <!-- Columna Derecha: Panel de código -->
      <aside
        class="w-96 bg-white/95 dark:bg-slate-900/80 border-l border-gray-200/60 dark:border-slate-700/50 overflow-hidden flex flex-col flex-shrink-0 backdrop-blur-sm"
      >
        <div class="overflow-y-auto flex-1">
          <CodePanel />
        </div>
      </aside>
    </div>

    <!-- Responsive: Menú móvil -->
    <div id="mobile-menu" class="lg:hidden fixed inset-0 z-40 hidden">
      <div class="fixed inset-0 bg-black bg-opacity-50" id="mobile-overlay">
      </div>
      <div
        class="fixed left-0 top-16 bottom-0 w-80 bg-white/95 dark:bg-slate-900/95 shadow-xl transform -translate-x-full transition-transform backdrop-blur-md"
        id="mobile-sidebar"
      >
        <div class="p-6 overflow-y-auto h-full">
          <SidebarMenu />
        </div>
      </div>
    </div>

    <!-- Botón de menú móvil -->
    <button
      id="mobile-menu-button"
      class="lg:hidden fixed bottom-6 left-6 z-50 bg-primary-500 text-white p-3 rounded-full shadow-lg hover:bg-primary-600 transition-colors"
    >
      <svg
        class="w-6 h-6"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>

    <script is:inline>
      class MobileMenuManager {
        constructor() {
          this.mobileMenuButton = null;
          this.mobileMenu = null;
          this.mobileSidebar = null;
          this.mobileOverlay = null;
          this.init();
        }

        init() {
          document.addEventListener('DOMContentLoaded', () => {
            this.mobileMenuButton = document.getElementById('mobile-menu-button');
            this.mobileMenu = document.getElementById('mobile-menu');
            this.mobileSidebar = document.getElementById('mobile-sidebar');
            this.mobileOverlay = document.getElementById('mobile-overlay');
            
            this.bindEvents();
          });
        }

        bindEvents() {
          this.mobileMenuButton?.addEventListener('click', () => {
            this.toggleMobileMenu();
          });

          this.mobileOverlay?.addEventListener('click', () => {
            this.toggleMobileMenu();
          });

          window.addEventListener('resize', () => {
            if (window.innerWidth >= 1024) {
              this.closeMobileMenu();
            }
          });
        }

        toggleMobileMenu() {
          this.mobileMenu?.classList.toggle('hidden');
          this.mobileSidebar?.classList.toggle('-translate-x-full');
        }

        closeMobileMenu() {
          this.mobileMenu?.classList.add('hidden');
          this.mobileSidebar?.classList.add('-translate-x-full');
        }
      }

      // Auto-inicializar
      new MobileMenuManager();
    </script>
  </body>
</html>
